# T-test
t_test_result <- t.test(Intention_To_use_data_long$Score ~ Intention_To_use_data_long$Condition)
t_test_result
IntentiontoUsewithPvalueString <- paste("Intention to use (p =", round(t_test_result$p.value, 3), ")")
Engagement_data <- data %>%
select(Condition, 12) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Engagement_data_long <- Engagement_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Engagement_data_long
# T-test
t_test_result <- t.test(Engagement_data_long$Score ~ Engagement_data_long$Condition)
t_test_result
EngagementwithPvalueString <- paste("Engagement (p =", round(t_test_result$p.value, 3), ")")
# Define your labels
my.labels <- c(
EngagementwithPvalueString,
"Percieved usefulness",
"Perceived Ease of Use (PEU)",
IntentiontoUsewithPvalueString
)
# Call the function
Questionnaire_plot(data, questions = my.labels, columns = c(12,19,26,27), title = "Scores for each construct",title_offset = 0.4)
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(tidyverse)
# Load the data
data <- read.csv("./data/Transcription_data.csv")
# Load necessary libraries
# Load the data
data <- read.csv("./data/Transcription_data.csv")
# Load necessary libraries
# Load the data
data <- read.csv("./data/Transcription_data.csv")
data
# Load necessary libraries
# Load the data
data <- read.csv("./data/Transcription_data.csv")
data
# Display the first few rows of the data
head(data)
# Display the structure of the data
str(data)
# Display the summary of the data
summary(data)
# Display the column names of the data
colnames(data)
# Display the number of rows and columns in the data
dim(data)
# Display the unique values in the 'Condition' column
unique(data$Condition)
# Display the first few rows of the data
head(data)
# Display the structure of the data
str(data)
# Display the summary of the data
summary(data)
# Display the column names of the data
colnames(data)
# Display the number of rows and columns in the data
dim(data)
# Display the unique values in the 'Condition' column
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
# Load the data
data <- read.csv("./data/Transcription_data.csv")
data
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(tidyverse)
# Load the data
data <- read.csv("./data/Transcription_data.csv")
# Preview the data
head(data)
# Filter rows for "Average Sentence Length of User" and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c("Average Sentence Length of User", "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
`Average Sentence Length of User` = as.numeric(gsub(" chars", "", `Average Sentence Length of User`)),
`AI Initiated` = as.factor(`AI Initiated`)
)
# Preview processed data
head(data_filtered)
# Perform a t-test to compare sentence lengths between AI Initiated (True/False)
t_test_result <- t.test(
`Average Sentence Length of User` ~ `AI Initiated`,
data = data_filtered
)
t_test_result
# Boxplot of Average Sentence Length by AI Initiated
ggplot(data_filtered, aes(x = `AI Initiated`, y = `Average Sentence Length of User`)) +
geom_boxplot() +
labs(
title = "Average Sentence Length by AI Initiated",
x = "AI Initiated",
y = "Average Sentence Length"
)
# Load necessary libraries
library(tidyverse)
# Load the data
data <- read.csv("./data/Transcription_data.csv")
data
# Filter rows for "Average Sentence Length of User" and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c("Average Sentence Length of User", "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
`Average Sentence Length of User` = as.numeric(gsub(" chars", "", `Average Sentence Length of User`)),
`AI Initiated` = as.factor(`AI Initiated`)
)
# Preview processed data
data_filtered
# Perform a t-test to compare sentence lengths between AI Initiated (True/False)
t_test_result <- t.test(
`Average Sentence Length of User` ~ `AI Initiated`,
data = data_filtered
)
t_test_result
# Boxplot of Average Sentence Length by AI Initiated
ggplot(data_filtered, aes(x = `AI Initiated`, y = `Average Sentence Length of User`)) +
geom_boxplot() +
labs(
title = "Average Sentence Length by AI Initiated",
x = "AI Initiated",
y = "Average Sentence Length"
)
analyze_variable <- function(data, variable_name) {
# Filter rows for the specified variable and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c(variable_name, "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
!!variable_name := as.numeric(gsub(" chars", "", .data[[variable_name]])),
`AI Initiated` = as.factor(`AI Initiated`)
)
# Perform a t-test
t_test_result <- t.test(
.data[[variable_name]] ~ `AI Initiated`,
data = data_filtered
)
print(t_test_result)
# Visualize the results
ggplot(data_filtered, aes(x = `AI Initiated`, y = .data[[variable_name]])) +
geom_boxplot() +
labs(
title = paste(variable_name, "by AI Initiated"),
x = "AI Initiated",
y = variable_name
)
}
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(tidyverse)
# Load the data
data <- read.csv("./data/Transcription_data.csv")
data
analyze_variable <- function(data, variable_name) {
# Filter rows for the specified variable and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c(variable_name, "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
!!variable_name := as.numeric(gsub(" chars", "", .data[[variable_name]])),
`AI Initiated` = as.factor(`AI Initiated`)
)
# Perform a t-test
t_test_result <- t.test(
.data[[variable_name]] ~ `AI Initiated`,
data = data_filtered
)
print(t_test_result)
# Visualize the results
ggplot(data_filtered, aes(x = `AI Initiated`, y = .data[[variable_name]])) +
geom_boxplot() +
labs(
title = paste(variable_name, "by AI Initiated"),
x = "AI Initiated",
y = variable_name
)
}
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Average Sentence Length of User")
# Load necessary libraries
library(tidyverse)
# Load the data
data <- read.csv("./data/Transcription_data.csv")
data
analyze_variable <- function(data, variable_name) {
# Filter rows for the specified variable and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c(variable_name, "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
!!variable_name := as.numeric(gsub(" chars", "", .data[[variable_name]])),
`AI Initiated` = as.factor(`AI Initiated`)
)
# Perform a t-test
t_test_result <- t.test(
.data[[variable_name]] ~ `AI Initiated`,
data = data_filtered
)
print(t_test_result)
# Visualize the results
ggplot(data_filtered, aes(x = `AI Initiated`, y = .data[[variable_name]])) +
geom_boxplot() +
labs(
title = paste(variable_name, "by AI Initiated"),
x = "AI Initiated",
y = variable_name
)
}
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Average Sentence Length of User")
analyze_variable <- function(data, variable_name) {
# Filter rows for the specified variable and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c(variable_name, "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
!!variable_name := as.numeric(gsub(" chars", "", .data[[variable_name]])),
`AI Initiated` = as.factor(`AI Initiated`)
)
# Perform a t-test
t_test_result <- t.test(
data[[variable_name]] ~ `AI Initiated`,
data = data_filtered
)
print(t_test_result)
# Visualize the results
ggplot(data_filtered, aes(x = `AI Initiated`, y = .data[[variable_name]])) +
geom_boxplot() +
labs(
title = paste(variable_name, "by AI Initiated"),
x = "AI Initiated",
y = variable_name
)
}
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Average Sentence Length of User")
analyze_variable <- function(data, variable_name) {
# Filter rows for the specified variable and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c(variable_name, "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
!!variable_name := as.numeric(gsub(" chars", "", .data[[variable_name]])),
`AI Initiated` = as.factor(`AI Initiated`)
)
# Perform a t-test
t_test_result <- t.test(
.data[[variable_name]] ~ `AI Initiated`,
data = data_filtered
)
print(t_test_result)
# Visualize the results
ggplot(data_filtered, aes(x = `AI Initiated`, y = .data[[variable_name]])) +
geom_boxplot() +
labs(
title = paste(variable_name, "by AI Initiated"),
x = "AI Initiated",
y = variable_name
)
}
analyze_variable <- function(data, variable_name) {
# Filter rows for the specified variable and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c(variable_name, "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
!!variable_name := as.numeric(gsub(" chars", "", .data[[variable_name]])),
`AI Initiated` = as.factor(`AI Initiated`)
)
# Perform a t-test
t_test_result <- t.test(
.data[[variable_name]] ~ `AI Initiated`,
data = data_filtered
)
print(t_test_result)
# Visualize the results
ggplot(data_filtered, aes(x = `AI Initiated`, y = .data[[variable_name]])) +
geom_boxplot() +
labs(
title = paste(variable_name, "by AI Initiated"),
x = "AI Initiated",
y = variable_name
)
}
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Average Sentence Length of User")
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(tidyverse)
# Load the data
data <- read.csv("./data/Transcription_data.csv")
data
analyze_variable <- function(data, variable_name) {
# Filter rows for the specified variable and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c(variable_name, "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
!!variable_name := as.numeric(gsub(" chars", "", data_filtered[[variable_name]])),
`AI Initiated` = as.factor(data_filtered[["AI Initiated"]])
)
# Perform a t-test
t_test_result <- t.test(
data_filtered[[variable_name]] ~ data_filtered[["AI Initiated"]]
)
print(t_test_result)
# Visualize the results
ggplot(data_filtered, aes(x = `AI Initiated`, y = data_filtered[[variable_name]])) +
geom_boxplot() +
labs(
title = paste(variable_name, "by AI Initiated"),
x = "AI Initiated",
y = variable_name
)
}
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Average Sentence Length of User")
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(tidyverse)
# Load the data
data <- read.csv("./data/Transcription_data.csv")
data
analyze_variable <- function(data, variable_name) {
# Filter rows for the specified variable and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c(variable_name, "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
!!variable_name := as.numeric(gsub(" chars", "", data_filtered[[variable_name]])),
`AI Initiated` = as.factor(data_filtered[["AI Initiated"]])
)
# Perform a t-test
t_test_result <- t.test(
data_filtered[[variable_name]] ~ data_filtered[["AI Initiated"]]
)
print(t_test_result)
# Visualize the results
p <- ggplot(data_filtered, aes(x = `AI Initiated`, y = data_filtered[[variable_name]])) +
geom_boxplot() +
labs(
title = paste(variable_name, "by AI Initiated"),
x = "AI Initiated",
y = variable_name
)
p
# Save the plot
ggsave(
filename = paste0("plots/Transcription_", variable_name, ".png"),
plot = p, width = 10, height = 6, dpi = 300, bg = "white"
)
}
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Average Sentence Length of User")
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(tidyverse)
# Load the data
data <- read.csv("./data/Transcription_data.csv")
data
analyze_variable <- function(data, variable_name) {
# Filter rows for the specified variable and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c(variable_name, "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
!!variable_name := as.numeric(gsub(" chars", "", data_filtered[[variable_name]])),
`AI Initiated` = as.factor(data_filtered[["AI Initiated"]])
)
# Perform a t-test
t_test_result <- t.test(
data_filtered[[variable_name]] ~ data_filtered[["AI Initiated"]]
)
print(t_test_result)
# Visualize the results
p <- ggplot(data_filtered, aes(x = `AI Initiated`, y = data_filtered[[variable_name]])) +
geom_boxplot() +
labs(
title = paste(variable_name, "by AI Initiated"),
x = "AI Initiated",
y = variable_name
)
p
# Save the plot
ggsave(
filename = paste0("plots/Transcription_", variable_name, ".png"),
plot = p, width = 10, height = 6, dpi = 300, bg = "white"
)
}
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Average Sentence Length of User")
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Difference in Seconds")
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Total Turns")
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(tidyverse)
# Load the data
data <- read.csv("./data/Transcription_data.csv")
data
analyze_variable <- function(data, variable_name) {
# Filter rows for the specified variable and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c(variable_name, "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
!!variable_name := as.numeric(gsub(" chars", "", data_filtered[[variable_name]])),
`AI Initiated` = as.factor(data_filtered[["AI Initiated"]])
)
# Perform a t-test
t_test_result <- t.test(
data_filtered[[variable_name]] ~ data_filtered[["AI Initiated"]]
)
print(t_test_result)
# Visualize the results
p <- ggplot(data_filtered, aes(x = `AI Initiated`, y = data_filtered[[variable_name]])) +
geom_boxplot() +
labs(
title = paste(variable_name, "by AI Initiated"),
x = "AI Initiated",
y = variable_name
)
p
# Save the plot
ggsave(
filename = paste0("plots/Transcription_", variable_name, ".png"),
plot = p, width = 10, height = 6, dpi = 300, bg = "white"
)
}
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Average Sentence Length of User")
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Difference in Seconds")
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Total Turns")
knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(tidyverse)
# Load the data
data <- read.csv("./data/Transcription_data.csv")
data
analyze_variable <- function(data, variable_name) {
# Filter rows for the specified variable and "AI Initiated"
data_filtered <- data %>%
filter(Variable %in% c(variable_name, "AI Initiated")) %>%
pivot_wider(names_from = Variable, values_from = Value)
# Convert columns to appropriate types
data_filtered <- data_filtered %>%
mutate(
!!variable_name := as.numeric(gsub(" chars", "", data_filtered[[variable_name]])),
`AI Initiated` = as.factor(data_filtered[["AI Initiated"]])
)
# Perform a t-test
t_test_result <- t.test(
data_filtered[[variable_name]] ~ data_filtered[["AI Initiated"]]
)
print(t_test_result)
# Visualize the results
p <- ggplot(data_filtered, aes(x = `AI Initiated`, y = data_filtered[[variable_name]])) +
geom_boxplot() +
labs(
title = paste(variable_name, "by AI Initiated"),
x = "AI Initiated",
y = variable_name
)
p
# Save the plot
ggsave(
filename = paste0("plots/Transcription_", variable_name, ".png"),
plot = p, width = 10, height = 6, dpi = 300, bg = "white"
)
}
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Average Sentence Length of User")
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Difference in Seconds")
# Analyze "Average Sentence Length of User"
analyze_variable(data, "Difference in Seconds")
