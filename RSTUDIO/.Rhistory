select(Condition, 27) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Intention_To_use_data_long <- Intention_To_use_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Intention_To_use_data_long
# T-test
t_test_result <- t.test(Intention_To_use_data_long$Score ~ Intention_To_use_data_long$Condition)
t_test_result
# Call the function
Questionnaire_plot(data, questions = my.labels, columns = c(12,19,26,27), title = "Scores for each construct",title_offset = 0.4)
# Load your data
data <- read.csv("./data/Questionnaire_data.csv", dec = ",")
Intention_To_use_data <- data %>%
select(Condition, 27) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Intention_To_use_data_long <- Intention_To_use_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Intention_To_use_data_long
# T-test
t_test_result <- t.test(Intention_To_use_data_long$Score ~ Intention_To_use_data_long$Condition)
t_test_result
t_test_result$p.value
# Define your labels
my.labels <- c(
"Engagement",
"Percieved usefulness",
"Perceived Ease of Use (PEU)",
"Intention to use (p = 0.477)"
)
# Call the function
Questionnaire_plot(data, questions = my.labels, columns = c(12,19,26,27), title = "Scores for each construct",title_offset = 0.4)
# Load your data
data <- read.csv("./data/Questionnaire_data.csv", dec = ",")
Intention_To_use_data <- data %>%
select(Condition, 27) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Intention_To_use_data_long <- Intention_To_use_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Intention_To_use_data_long
# T-test
t_test_result <- t.test(Intention_To_use_data_long$Score ~ Intention_To_use_data_long$Condition)
IntentiontoUsewithPvalueString <- paste("Intention to use (p =", round(t_test_result$p.value, 3), ")")
# Define your labels
my.labels <- c(
"Engagement",
"Percieved usefulness",
"Perceived Ease of Use (PEU)",
IntentiontoUsewithPvalueString,
)
# Call the function
Questionnaire_plot(data, questions = my.labels, columns = c(12,19,26,27), title = "Scores for each construct",title_offset = 0.4)
# Load your data
data <- read.csv("./data/Questionnaire_data.csv", dec = ",")
Intention_To_use_data <- data %>%
select(Condition, 27) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Intention_To_use_data_long <- Intention_To_use_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Intention_To_use_data_long
# T-test
t_test_result <- t.test(Intention_To_use_data_long$Score ~ Intention_To_use_data_long$Condition)
IntentiontoUsewithPvalueString <- paste("Intention to use (p =", round(t_test_result$p.value, 3), ")")
Engagement_data <- data %>%
select(Condition, 12) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Engagement_data_long <- Engagement_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Engagement_data_long
# T-test
t_test_result <- t.test(Engagement_data_long$Score ~ Engagement_data_long$Condition)
EngagementwithPvalueString <- paste("Engagement (p =", round(t_test_result$p.value, 3), ")")
# Define your labels
my.labels <- c(
EngagementwithPvalueString,
"Percieved usefulness",
"Perceived Ease of Use (PEU)",
IntentiontoUsewithPvalueString,
)
# Call the function
Questionnaire_plot(data, questions = my.labels, columns = c(12,19,26,27), title = "Scores for each construct",title_offset = 0.4)
# Load your data
data <- read.csv("./data/Questionnaire_data.csv", dec = ",")
Intention_To_use_data <- data %>%
select(Condition, 27) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Intention_To_use_data_long <- Intention_To_use_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Intention_To_use_data_long
# T-test
t_test_result <- t.test(Intention_To_use_data_long$Score ~ Intention_To_use_data_long$Condition)
IntentiontoUsewithPvalueString <- paste("Intention to use (p =", round(t_test_result$p.value, 3), ")")
Engagement_data <- data %>%
select(Condition, 12) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Engagement_data_long <- Engagement_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Engagement_data_long
# T-test
t_test_result <- t.test(Engagement_data_long$Score ~ Engagement_data_long$Condition)
EngagementwithPvalueString <- paste("Engagement (p =", round(t_test_result$p.value, 3), ")")
# Define your labels
my.labels <- c(
EngagementwithPvalueString,
"Percieved usefulness",
"Perceived Ease of Use (PEU)",
IntentiontoUsewithPvalueString,
)
# Call the function
Questionnaire_plot(data, questions = my.labels, columns = c(12,19,26,27), title = "Scores for each construct",title_offset = 0.4)
# Load your data
data <- read.csv("./data/Questionnaire_data.csv", dec = ",")
Intention_To_use_data <- data %>%
select(Condition, 27) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Intention_To_use_data_long <- Intention_To_use_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Intention_To_use_data_long
# T-test
t_test_result <- t.test(Intention_To_use_data_long$Score ~ Intention_To_use_data_long$Condition)
IntentiontoUsewithPvalueString <- paste("Intention to use (p =", round(t_test_result$p.value, 3), ")")
Engagement_data <- data %>%
select(Condition, 12) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Engagement_data_long <- Engagement_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Engagement_data_long
# T-test
t_test_result <- t.test(Engagement_data_long$Score ~ Engagement_data_long$Condition)
EngagementwithPvalueString <- paste("Engagement (p =", round(t_test_result$p.value, 3), ")")
# Define your labels
my.labels <- c(
EngagementwithPvalueString,
"Percieved usefulness",
"Perceived Ease of Use (PEU)",
IntentiontoUsewithPvalueString
)
# Call the function
Questionnaire_plot(data, questions = my.labels, columns = c(12,19,26,27), title = "Scores for each construct",title_offset = 0.4)
# Load your data
data <- read.csv("./data/AI_usage_data.csv", dec = ",")
data
# Define your labels
my.labels <- c(
"ChatGPT",	"Google Gemini",	"Siri",	"Microsoft Copilot",	"GitHub Copilot", 	"GrammalyGO",	"CanvaAI",	"I do not use AI", 	"Other"
)
# Manually create the dataframe
df <- tibble::tibble(
Group = c("AI", "User"),
ChatGPT = c(9, 8),
Google_Gemini = c(0, 3),
Siri = c(2, 0),
Microsoft_Copilot = c(1, 2),
GitHub_Copilot = c(2, 1),
GrammarlyGO = c(0, 0),
CanvaAI = c(1, 0)
)
# Pivot longer for ggplot
df_long <- df %>%
pivot_longer(cols = -Group, names_to = "Tool", values_to = "Count")
# Reorder Tool levels based on total count (descending)
df_long <- df_long %>%
group_by(Tool) %>%
mutate(TotalCount = sum(Count)) %>%
ungroup() %>%
mutate(Tool = reorder(Tool, -TotalCount))
# Plot
p <- ggplot(df_long, aes(x = Tool, y = Count, fill = Group)) +
geom_bar(stat = "identity", position = position_dodge(width = 1)) +
labs(title = "AI Tools Usage by Group", x = "Tool", y = "Count") +
theme_minimal() +
scale_y_continuous(breaks = seq(0, 10, 1)) +
scale_fill_manual(values = c(
"AI" = "steelblue",
"User" = "tomato")) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top",
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_line(color = "grey90")
)
# Save the plot
ggsave(filename = "plots/Questionnaire_AI_usage_by_group.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
# Show plot
p
df_long
# Load your data
data <- read.csv("./data/AI_usage_data.csv", dec = ",")
data
# Define your labels
my.labels <- c(
"ChatGPT",	"Google Gemini",	"Siri",	"Microsoft Copilot",	"GitHub Copilot", 	"GrammalyGO",	"CanvaAI",	"I do not use AI", 	"Other"
)
# Manually create the dataframe
df <- tibble::tibble(
Group = c("AI", "User"),
ChatGPT = c(9, 8),
Google_Gemini = c(0, 3),
Siri = c(2, 0),
Microsoft_Copilot = c(1, 2),
GitHub_Copilot = c(2, 1),
GrammarlyGO = c(0, 0),
CanvaAI = c(1, 0)
)
# Pivot longer for ggplot
df_long <- df %>%
pivot_longer(cols = -Group, names_to = "Tool", values_to = "Count")
# Reorder Tool levels based on total count (descending)
df_long <- df_long %>%
group_by(Tool) %>%
mutate(TotalCount = sum(Count)) %>%
ungroup() %>%
mutate(Tool = reorder(Tool, -TotalCount))
df_long
# Plot
p <- ggplot(df_long, aes(x = Tool, y = Count, fill = Group)) +
geom_bar(stat = "identity", position = position_dodge(width = 1)) +
labs(title = "AI Tools Usage by Group", x = "Tool", y = "Count") +
theme_minimal() +
scale_y_continuous(breaks = seq(0, 10, 1)) +
scale_fill_manual(values = c(
"AI" = "steelblue",
"User" = "tomato")) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top",
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_line(color = "grey90")
)
# Save the plot
ggsave(filename = "plots/Questionnaire_AI_usage_by_group.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
# Show plot
p
# Load your data
data <- read.csv("./data/AI_usage_data.csv", dec = ",")
data
# Define your labels
my.labels <- c(
"ChatGPT",	"Google Gemini",	"Siri",	"Microsoft Copilot",	"GitHub Copilot", 	"GrammalyGO",	"CanvaAI",	"I do not use AI", 	"Other"
)
# Manually create the dataframe
df <- tibble::tibble(
Group = c("AI", "User"),
ChatGPT = c(9, 8),
Google_Gemini = c(0, 3),
Siri = c(2, 0),
Microsoft_Copilot = c(1, 2),
GitHub_Copilot = c(2, 1),
GrammarlyGO = c(0, 0),
CanvaAI = c(1, 0)
)
# Pivot longer for ggplot
df_long <- df %>%
pivot_longer(cols = -Group, names_to = "Tool", values_to = "Count")
# Reorder Tool levels based on total count (descending)
df_long <- df_long %>%
group_by(Tool) %>%
mutate(TotalCount = sum(Count)) %>%
ungroup() %>%
mutate(Tool = reorder(Tool, -TotalCount))
df_long
# Plot
p <- ggplot(df_long, aes(x = Tool, y = Count, fill = Group)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
labs(title = "AI Tools Usage by Group", x = "Tool", y = "Count") +
theme_minimal() +
scale_y_continuous(breaks = seq(0, 10, 1)) +
scale_fill_manual(values = c(
"AI" = "steelblue",
"User" = "tomato")) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top",
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_line(color = "grey90")
)
# Save the plot
ggsave(filename = "plots/Questionnaire_AI_usage_by_group.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
# Show plot
p
# Load your data
data <- read.csv("./data/AI_usage_data.csv", dec = ",")
data
# Define your labels
my.labels <- c(
"ChatGPT",	"Google Gemini",	"Siri",	"Microsoft Copilot",	"GitHub Copilot", 	"GrammalyGO",	"CanvaAI",	"I do not use AI", 	"Other"
)
# Manually create the dataframe
df <- tibble::tibble(
Group = c("AI", "User"),
ChatGPT = c(9, 8),
Google_Gemini = c(0, 3),
Siri = c(2, 0),
Microsoft_Copilot = c(1, 2),
GitHub_Copilot = c(2, 1),
GrammarlyGO = c(0, 0),
CanvaAI = c(1, 0)
)
# Pivot longer for ggplot
df_long <- df %>%
pivot_longer(cols = -Group, names_to = "Tool", values_to = "Count")
# Reorder Tool levels based on total count (descending)
df_long <- df_long %>%
group_by(Tool) %>%
mutate(TotalCount = sum(Count)) %>%
ungroup() %>%
mutate(Tool = reorder(Tool, -TotalCount))
df_long
# Plot
p <- ggplot(df_long, aes(x = Tool, y = Count, fill = Group)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
labs(title = "AI Tools Usage by Group", x = "Tool", y = "Count") +
theme_minimal() +
scale_y_continuous(breaks = seq(0, 10, 1)) +
scale_fill_manual(values = c(
"AI" = "steelblue",
"User" = "tomato")) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top",
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_line(color = "grey90")
)
# Save the plot
ggsave(filename = "plots/Questionnaire_AI_usage_by_group.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
# Show plot
p
# Load your data
data <- read.csv("./data/AI_usage_data.csv", dec = ",")
data
# Define your labels
my.labels <- c(
"ChatGPT",	"Google Gemini",	"Siri",	"Microsoft Copilot",	"GitHub Copilot", 	"GrammalyGO",	"CanvaAI",	"I do not use AI", 	"Other"
)
# Manually create the dataframe
df <- tibble::tibble(
Group = c("AI", "User"),
ChatGPT = c(9, 8),
Google_Gemini = c(0, 3),
Siri = c(2, 0),
Microsoft_Copilot = c(1, 2),
GitHub_Copilot = c(2, 1),
GrammarlyGO = c(0, 0),
CanvaAI = c(1, 0)
)
# Pivot longer for ggplot
df_long <- df %>%
pivot_longer(cols = -Group, names_to = "Tool", values_to = "Count")
# Reorder Tool levels based on total count (descending)
df_long <- df_long %>%
group_by(Tool) %>%
mutate(TotalCount = sum(Count)) %>%
ungroup() %>%
mutate(Tool = reorder(Tool, -TotalCount))
df_long
# Plot
p <- ggplot(df_long, aes(x = Tool, y = Count, fill = Group)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width=0.9) +
labs(title = "AI Tools Usage by Group", x = "Tool", y = "Count") +
theme_minimal() +
scale_y_continuous(breaks = seq(0, 10, 1)) +
scale_fill_manual(values = c(
"AI" = "steelblue",
"User" = "tomato")) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top",
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_line(color = "grey90")
)
# Save the plot
ggsave(filename = "plots/Questionnaire_AI_usage_by_group.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
# Show plot
p
# Load your data
data <- read.csv("./data/AI_usage_data.csv", dec = ",")
data
# Define your labels
my.labels <- c(
"ChatGPT",	"Google Gemini",	"Siri",	"Microsoft Copilot",	"GitHub Copilot", 	"GrammalyGO",	"CanvaAI",	"I do not use AI", 	"Other"
)
# Manually create the dataframe
df <- tibble::tibble(
Group = c("AI", "User"),
ChatGPT = c(9, 8),
Google_Gemini = c(0, 3),
Siri = c(2, 0),
Microsoft_Copilot = c(1, 2),
GitHub_Copilot = c(2, 1),
GrammarlyGO = c(0, 0),
CanvaAI = c(1, 0)
)
# Pivot longer for ggplot
df_long <- df %>%
pivot_longer(cols = -Group, names_to = "Tool", values_to = "Count")
# Reorder Tool levels based on total count (descending)
df_long <- df_long %>%
group_by(Tool) %>%
mutate(TotalCount = sum(Count)) %>%
ungroup() %>%
mutate(Tool = reorder(Tool, -TotalCount))
df_long
# Plot
p <- ggplot(df_long, aes(x = Tool, y = Count, fill = Group)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width=0.4) +
labs(title = "AI Tools Usage by Group", x = "Tool", y = "Count") +
theme_minimal() +
scale_y_continuous(breaks = seq(0, 10, 1)) +
scale_fill_manual(values = c(
"AI" = "steelblue",
"User" = "tomato")) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top",
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_line(color = "grey90")
)
# Save the plot
ggsave(filename = "plots/Questionnaire_AI_usage_by_group.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
# Show plot
p
# Load your data
data <- read.csv("./data/AI_usage_data.csv", dec = ",")
data
# Define your labels
my.labels <- c(
"ChatGPT",	"Google Gemini",	"Siri",	"Microsoft Copilot",	"GitHub Copilot", 	"GrammalyGO",	"CanvaAI",	"I do not use AI", 	"Other"
)
# Manually create the dataframe
df <- tibble::tibble(
Group = c("AI", "User"),
ChatGPT = c(9, 8),
Google_Gemini = c(0, 3),
Siri = c(2, 0),
Microsoft_Copilot = c(1, 2),
GitHub_Copilot = c(2, 1),
GrammarlyGO = c(0, 0),
CanvaAI = c(1, 0)
)
# Pivot longer for ggplot
df_long <- df %>%
pivot_longer(cols = -Group, names_to = "Tool", values_to = "Count")
# Reorder Tool levels based on total count (descending)
df_long <- df_long %>%
group_by(Tool) %>%
mutate(TotalCount = sum(Count)) %>%
ungroup() %>%
mutate(Tool = reorder(Tool, -TotalCount))
df_long
# Plot
p <- ggplot(df_long, aes(x = Tool, y = Count, fill = Group)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width=0.8) +
labs(title = "AI Tools Usage by Group", x = "Tool", y = "Count") +
theme_minimal() +
scale_y_continuous(breaks = seq(0, 10, 1)) +
scale_fill_manual(values = c(
"AI" = "steelblue",
"User" = "tomato")) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top",
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_line(color = "grey90")
)
# Save the plot
ggsave(filename = "plots/Questionnaire_AI_usage_by_group.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
# Show plot
p
