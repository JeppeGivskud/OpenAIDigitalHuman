"I hvilken grad følte du dig mentalt fordybet i oplevelsen? \n(1 = Slet ikke, 7 Rigtig meget)",
"Hvor involverende var oplevelsen? \n(1 = Slet ikke, 7 Rigtig meget)",
"Hvor fuldstændigt blev dine sanser engageret? \n(1 = Slet ikke, 7 Rigtig meget)",
"I hvilken grad oplevede du en følelse af virkelighed?\n(1 = Slet ikke, 7 Rigtig meget)",
"Hvor engagerende var samtalen? \n(1 = Slet ikke, 7 Rigtig meget)",
"Hvor afslappende eller spændende var oplevelsen? \n(1 = Meget afslappende, 7 Meget spændende)"
)
# Call the function
Questionnaire_plot(data, questions = my.labels, columns = 6:11, title = "Average Engagement per question by Condition",title_offset=0)
# Load your data
data <- read.csv("./data/Questionnaire_data.csv", dec = ",")
# Define your labels
my.labels <- c(
"Brugen af ROSIE i mit projekt \nville gøre mig i stand til at udføre opgaver hurtigere \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)",
"Brugen af ROSIE ville kunne forbedre min arbejdspræstation \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)",
"Brugen af ROSIE i mit arbejde ville øge min produktivitet. \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)",
"Brugen af ROSIE ville forbedre min evne til at udføre \nmit arbejde godt. \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)",
"Brugen af ROSIE ville gøre det \nlettere at udføre mit arbejde. \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)",
"Jeg synes at ROSIE ville være nyttig i mit arbejde. \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)"
)
# Call the function
Questionnaire_plot(data, questions = my.labels, columns = 6:11, title = "Perceived usefulness per question by Condition",title_offset=0)
# Load your data
data <- read.csv("./data/Questionnaire_data.csv", dec = ",")
# Define your labels
my.labels <- c(
"Det ville være nemt for mig at lære at betjene ROSIE \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)",
"Jeg ville have nemt ved at få ROSIE \ntil at gøre hvad jeg ville have hende til at gøre \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)",
"Min interaktion med ROSIE ville være tydelig og forståelig \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)",
"Jeg kunne forestille mig, at ROSIE ville være tydelig og forståelig \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)",
"Det ville være nemt for mig at blive dygtig til at bruge ROSIE \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)",
"Jeg kunne forestille mig, at ROSIE ville være nem at bruge \n(1 = Meget usandsynligt, 7 = Meget sandsynligt)"
)
# Call the function
Questionnaire_plot(data, questions = my.labels, columns = 6:11, title = " Perceived Ease of Use (PEU) per question by Condition",title_offset=-0.6)
# Load your data
data <- read.csv("./data/Questionnaire_data.csv", dec = ",")
Intention_To_use_data <- data %>%
select(Condition, 27) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Intention_To_use_data_long <- Intention_To_use_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Intention_To_use_data_long
# T-test
t_test_result <- t.test(Intention_To_use_data_long$Score ~ Intention_To_use_data_long$Condition)
t_test_result
IntentiontoUsewithPvalueString <- paste("Intention to use (p =", round(t_test_result$p.value, 3), ")")
Engagement_data <- data %>%
select(Condition, 12) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
mutate(across(2:ncol(.), as.numeric))
# Pivot longer
Engagement_data_long <- Engagement_data %>%
pivot_longer(cols = -Condition,
names_to = "Question",
values_to = "Score") %>%
mutate(Question = factor(Question, levels = unique(Question)))
Engagement_data_long
# T-test
t_test_result <- t.test(Engagement_data_long$Score ~ Engagement_data_long$Condition)
t_test_result
EngagementwithPvalueString <- paste("Engagement (p =", round(t_test_result$p.value, 3), ")")
# Define your labels
my.labels <- c(
EngagementwithPvalueString,
"Percieved usefulness",
"Perceived Ease of Use (PEU)",
IntentiontoUsewithPvalueString
)
# Call the function
Questionnaire_plot(data, questions = my.labels, columns = c(12,19,26,27), title = "Scores for each construct",title_offset = 0.4)
plot_multiple_variables_boxplot <- function(data, columns, labels, title = "Boxplots for Constructs") {
library(dplyr)
library(tidyr)
library(ggplot2)
# Prepare data
long_data <- data %>%
select(Condition, all_of(columns)) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
pivot_longer(-Condition, names_to = "Variable", values_to = "Score") %>%
mutate(Score = as.numeric(Score)) %>%
mutate(Variable = factor(Variable, levels = unique(Variable)))
# Compute stats per variable
stats_df <- long_data %>%
group_by(Variable, Condition) %>%
summarise(
mean = mean(Score, na.rm = TRUE),
sd = sd(Score, na.rm = TRUE),
.groups = "drop"
)
# T-tests per variable (efficient and correct)
t_test_results <- long_data %>%
group_by(Variable) %>%
summarise(
test = list(t.test(Score ~ Condition)),
.groups = "drop"
) %>%
mutate(
p_value = sapply(test, function(x) x$p.value),
df = sapply(test, function(x) x$parameter)
) %>%
select(-test)
# Label mapping
label_df <- data.frame(Variable = levels(long_data$Variable), Label = labels)
# Merge mean & SD (averaged across conditions) and other info
avg_sd_df <- stats_df %>%
group_by(Variable) %>%
summarise(sd = mean(sd, na.rm = TRUE), .groups = "drop")
long_data <- long_data %>%
left_join(t_test_results, by = "Variable") %>%
left_join(avg_sd_df, by = "Variable") %>%
left_join(label_df, by = "Variable") %>%
mutate(facet_label = paste0(Label, " (p = ", signif(p_value, 3), ")", "\n(df = ", round(df, 1), ")"))
# Plot
p <- ggplot(long_data, aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot() +
geom_jitter(width = 0.15, alpha = 0.4) +
facet_wrap(~ facet_label, scales = "free_y") +
scale_fill_manual(values = c("AI" = "steelblue", "User" = "tomato")) +
labs(
title = title,
x = NULL,
y = "Score"
) +
theme_minimal() +
theme(legend.position = "none", strip.text = element_text(size = 12))
# Save the plot
ggsave(filename = paste0("plots/", "Questionnaire_", gsub(" ", "_", title), ".png"), plot = p, width = 8, height = 8, dpi = 300, bg = "white")
return(p)
}
plot_multiple_variables_boxplot(
data = data,
columns = c(12, 19, 26, 27),
labels = c(
"Engagement",
"Perceived Usefulness",
"Perceived Ease of Use (PEU)",
"Intention to Use"
),
title = "Scores for each construct boxplot"
)
#make a dataframe with the means
mean_scores <- data %>%
select(Condition, 12, 19, 26, 27) %>%
group_by(Condition) %>%
summarise(
Engagement = mean(`Engagement`, na.rm = TRUE),
Perceived_Usefulness = mean(`Perceived.Usefulness`, na.rm = TRUE),
Perceived_Ease_of_Use = mean(`Perceived.Ease.of.Use`, na.rm = TRUE),
Intention_to_Use = mean(`Intention.to.Use`, na.rm = TRUE)
)
View(data)
View(t_test_result)
plot_multiple_variables_boxplot <- function(data, columns, labels, title = "Boxplots for Constructs") {
library(dplyr)
library(tidyr)
library(ggplot2)
# Prepare data
long_data <- data %>%
select(Condition, all_of(columns)) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
pivot_longer(-Condition, names_to = "Variable", values_to = "Score") %>%
mutate(Score = as.numeric(Score)) %>%
mutate(Variable = factor(Variable, levels = unique(Variable)))
# Compute stats per variable
stats_df <- long_data %>%
group_by(Variable, Condition) %>%
summarise(
mean = mean(Score, na.rm = TRUE),
sd = sd(Score, na.rm = TRUE),
.groups = "drop"
)
# T-tests per variable (efficient and correct)
t_test_results <- long_data %>%
group_by(Variable) %>%
summarise(
test = list(t.test(Score ~ Condition)),
.groups = "drop"
) %>%
mutate(
p_value = sapply(test, function(x) x$p.value),
df = sapply(test, function(x) x$parameter)
t = sapply(test, function(x) x$statistic)
) %>%
select(-test)
# Label mapping
label_df <- data.frame(Variable = levels(long_data$Variable), Label = labels)
# Merge mean & SD (averaged across conditions) and other info
avg_sd_df <- stats_df %>%
group_by(Variable) %>%
summarise(sd = mean(sd, na.rm = TRUE), .groups = "drop")
long_data <- long_data %>%
left_join(t_test_results, by = "Variable") %>%
left_join(avg_sd_df, by = "Variable") %>%
left_join(label_df, by = "Variable") %>%
mutate(facet_label = paste0(Label, " (p = ", signif(p_value, 3), ")", "\n(df = ", round(df, 1),"t = ", round(t, 1), ")"))
# Plot
p <- ggplot(long_data, aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot() +
geom_jitter(width = 0.15, alpha = 0.4) +
facet_wrap(~ facet_label, scales = "free_y") +
scale_fill_manual(values = c("AI" = "steelblue", "User" = "tomato")) +
labs(
title = title,
x = NULL,
y = "Score"
) +
theme_minimal() +
theme(legend.position = "none", strip.text = element_text(size = 12))
# Save the plot
ggsave(filename = paste0("plots/", "Questionnaire_", gsub(" ", "_", title), ".png"), plot = p, width = 8, height = 8, dpi = 300, bg = "white")
return(p)
}
plot_multiple_variables_boxplot <- function(data, columns, labels, title = "Boxplots for Constructs") {
library(dplyr)
library(tidyr)
library(ggplot2)
# Prepare data
long_data <- data %>%
select(Condition, all_of(columns)) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
pivot_longer(-Condition, names_to = "Variable", values_to = "Score") %>%
mutate(Score = as.numeric(Score)) %>%
mutate(Variable = factor(Variable, levels = unique(Variable)))
# Compute stats per variable
stats_df <- long_data %>%
group_by(Variable, Condition) %>%
summarise(
mean = mean(Score, na.rm = TRUE),
sd = sd(Score, na.rm = TRUE),
.groups = "drop"
)
# T-tests per variable (efficient and correct)
t_test_results <- long_data %>%
group_by(Variable) %>%
summarise(
test = list(t.test(Score ~ Condition)),
.groups = "drop"
) %>%
mutate(
p_value = sapply(test, function(x) x$p.value),
df = sapply(test, function(x) x$parameter),
t = sapply(test, function(x) x$statistic)
) %>%
select(-test)
# Label mapping
label_df <- data.frame(Variable = levels(long_data$Variable), Label = labels)
# Merge mean & SD (averaged across conditions) and other info
avg_sd_df <- stats_df %>%
group_by(Variable) %>%
summarise(sd = mean(sd, na.rm = TRUE), .groups = "drop")
long_data <- long_data %>%
left_join(t_test_results, by = "Variable") %>%
left_join(avg_sd_df, by = "Variable") %>%
left_join(label_df, by = "Variable") %>%
mutate(facet_label = paste0(Label, " (p = ", signif(p_value, 3), ")",
"\n(df = ", round(df, 1)," t = ", round(t, 1), ")"))
# Plot
p <- ggplot(long_data, aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot() +
geom_jitter(width = 0.15, alpha = 0.4) +
facet_wrap(~ facet_label, scales = "free_y") +
scale_fill_manual(values = c("AI" = "steelblue", "User" = "tomato")) +
labs(
title = title,
x = NULL,
y = "Score"
) +
theme_minimal() +
theme(legend.position = "none", strip.text = element_text(size = 12))
# Save the plot
ggsave(filename = paste0("plots/", "Questionnaire_", gsub(" ", "_", title), ".png"), plot = p, width = 8, height = 8, dpi = 300, bg = "white")
return(p)
}
plot_multiple_variables_boxplot(
data = data,
columns = c(12, 19, 26, 27),
labels = c(
"Engagement",
"Perceived Usefulness",
"Perceived Ease of Use (PEU)",
"Intention to Use"
),
title = "Scores for each construct boxplot"
)
#make a dataframe with the means
mean_scores <- data %>%
select(Condition, 12, 19, 26, 27) %>%
group_by(Condition) %>%
summarise(
Engagement = mean(`Engagement`, na.rm = TRUE),
Perceived_Usefulness = mean(`Perceived.Usefulness`, na.rm = TRUE),
Perceived_Ease_of_Use = mean(`Perceived.Ease.of.Use`, na.rm = TRUE),
Intention_to_Use = mean(`Intention.to.Use`, na.rm = TRUE)
)
plot_multiple_variables_boxplot(
data = data,
columns = c(12, 19, 26, 27),
labels = c(
"Engagement",
"Perceived Usefulness",
"Perceived Ease of Use (PEU)",
"Intention to Use"
),
title = "Scores for each construct boxplot"
)
plot_multiple_variables_boxplot <- function(data, columns, labels, title = "Boxplots for Constructs") {
library(dplyr)
library(tidyr)
library(ggplot2)
# Prepare data
long_data <- data %>%
select(Condition, all_of(columns)) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
pivot_longer(-Condition, names_to = "Variable", values_to = "Score") %>%
mutate(Score = as.numeric(Score)) %>%
mutate(Variable = factor(Variable, levels = unique(Variable)))
# Compute stats per variable
stats_df <- long_data %>%
group_by(Variable, Condition) %>%
summarise(
mean = mean(Score, na.rm = TRUE),
sd = sd(Score, na.rm = TRUE),
.groups = "drop"
)
# T-tests per variable (efficient and correct)
t_test_results <- long_data %>%
group_by(Variable) %>%
summarise(
test = list(t.test(Score ~ Condition)),
.groups = "drop"
) %>%
mutate(
p_value = sapply(test, function(x) x$p.value),
df = sapply(test, function(x) x$parameter),
t = sapply(test, function(x) x$statistic)
) %>%
select(-test)
# Label mapping
label_df <- data.frame(Variable = levels(long_data$Variable), Label = labels)
# Merge mean & SD (averaged across conditions) and other info
avg_sd_df <- stats_df %>%
group_by(Variable) %>%
summarise(sd = mean(sd, na.rm = TRUE), .groups = "drop")
long_data <- long_data %>%
left_join(t_test_results, by = "Variable") %>%
left_join(avg_sd_df, by = "Variable") %>%
left_join(label_df, by = "Variable") %>%
mutate(facet_label = paste0(Label, " (p = ", signif(p_value, 3), ")",
"\n(df = ", round(df, 1),", t = ", round(t, 1), ")"))
# Plot
p <- ggplot(long_data, aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot() +
geom_jitter(width = 0.15, alpha = 0.4) +
facet_wrap(~ facet_label, scales = "free_y") +
scale_fill_manual(values = c("AI" = "steelblue", "User" = "tomato")) +
labs(
title = title,
x = NULL,
y = "Score"
) +
theme_minimal() +
theme(legend.position = "none", strip.text = element_text(size = 12))
# Save the plot
ggsave(filename = paste0("plots/", "Questionnaire_", gsub(" ", "_", title), ".png"), plot = p, width = 8, height = 8, dpi = 300, bg = "white")
return(p)
}
plot_multiple_variables_boxplot(
data = data,
columns = c(12, 19, 26, 27),
labels = c(
"Engagement",
"Perceived Usefulness",
"Perceived Ease of Use (PEU)",
"Intention to Use"
),
title = "Scores for each construct boxplot"
)
plot_multiple_variables_boxplot <- function(data, columns, labels, title = "Boxplots for Constructs") {
library(dplyr)
library(tidyr)
library(ggplot2)
# Prepare data
long_data <- data %>%
select(Condition, all_of(columns)) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
pivot_longer(-Condition, names_to = "Variable", values_to = "Score") %>%
mutate(Score = as.numeric(Score)) %>%
mutate(Variable = factor(Variable, levels = unique(Variable)))
# Compute stats per variable
stats_df <- long_data %>%
group_by(Variable, Condition) %>%
summarise(
mean = mean(Score, na.rm = TRUE),
sd = sd(Score, na.rm = TRUE),
.groups = "drop"
)
# Label mapping
label_df <- data.frame(Variable = levels(long_data$Variable), Label = labels)
# Merge mean & SD (averaged across conditions) and other info
avg_sd_df <- stats_df %>%
group_by(Variable) %>%
summarise(sd = mean(sd, na.rm = TRUE), .groups = "drop")
long_data <- long_data %>%
left_join(t_test_results, by = "Variable") %>%
left_join(avg_sd_df, by = "Variable") %>%
left_join(label_df, by = "Variable") %>%
mutate(facet_label = paste0(Label))
# Plot
p <- ggplot(long_data, aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot() +
geom_jitter(width = 0.15, alpha = 0.4) +
facet_wrap(~ facet_label, scales = "free_y") +
scale_fill_manual(values = c("AI" = "steelblue", "User" = "tomato")) +
labs(
title = title,
x = NULL,
y = "Score"
) +
theme_minimal() +
theme(legend.position = "none", strip.text = element_text(size = 12))
# Save the plot
ggsave(filename = paste0("plots/", "Questionnaire_", gsub(" ", "_", title), ".png"), plot = p, width = 8, height = 8, dpi = 300, bg = "white")
return(p)
}
plot_multiple_variables_boxplot(
data = data,
columns = c(12, 19, 26, 27),
labels = c(
"Engagement",
"Perceived Usefulness",
"Perceived Ease of Use (PEU)",
"Intention to Use"
),
title = "Scores for each construct boxplot"
)
plot_multiple_variables_boxplot <- function(data, columns, labels, title = "Boxplots for Constructs") {
library(dplyr)
library(tidyr)
library(ggplot2)
# Prepare data
long_data <- data %>%
select(Condition, all_of(columns)) %>%
mutate(Condition = factor(Condition, levels = c("AI", "User"))) %>%
pivot_longer(-Condition, names_to = "Variable", values_to = "Score") %>%
mutate(Score = as.numeric(Score)) %>%
mutate(Variable = factor(Variable, levels = unique(Variable)))
# Compute stats per variable
stats_df <- long_data %>%
group_by(Variable, Condition) %>%
summarise(
mean = mean(Score, na.rm = TRUE),
sd = sd(Score, na.rm = TRUE),
.groups = "drop"
)
# T-tests per variable (efficient and correct)
t_test_results <- long_data %>%
group_by(Variable) %>%
summarise(
test = list(t.test(Score ~ Condition)),
.groups = "drop"
) %>%
mutate(
p_value = sapply(test, function(x) x$p.value),
df = sapply(test, function(x) x$parameter),
t = sapply(test, function(x) x$statistic)
) %>%
select(-test)
# Label mapping
label_df <- data.frame(Variable = levels(long_data$Variable), Label = labels)
# Merge mean & SD (averaged across conditions) and other info
avg_sd_df <- stats_df %>%
group_by(Variable) %>%
summarise(sd = mean(sd, na.rm = TRUE), .groups = "drop")
long_data <- long_data %>%
left_join(t_test_results, by = "Variable") %>%
left_join(avg_sd_df, by = "Variable") %>%
left_join(label_df, by = "Variable") %>%
mutate(facet_label = paste0(Label))
# Plot
p <- ggplot(long_data, aes(x = Condition, y = Score, fill = Condition)) +
geom_boxplot() +
geom_jitter(width = 0.15, alpha = 0.4) +
facet_wrap(~ facet_label, scales = "free_y") +
scale_fill_manual(values = c("AI" = "steelblue", "User" = "tomato")) +
labs(
title = title,
x = NULL,
y = "Score"
) +
theme_minimal() +
theme(legend.position = "none", strip.text = element_text(size = 12))
# Save the plot
ggsave(filename = paste0("plots/", "Questionnaire_", gsub(" ", "_", title), ".png"), plot = p, width = 8, height = 8, dpi = 300, bg = "white")
return(p)
}
plot_multiple_variables_boxplot(
data = data,
columns = c(12, 19, 26, 27),
labels = c(
"Engagement",
"Perceived Usefulness",
"Perceived Ease of Use (PEU)",
"Intention to Use"
),
title = "Scores for each construct boxplot"
)
